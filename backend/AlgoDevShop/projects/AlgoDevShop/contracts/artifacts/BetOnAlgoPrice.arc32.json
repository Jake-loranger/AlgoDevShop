{
  "hints": {
    "createApplication(uint64,uint64,string,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optIn()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "placeBet(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "settleBet(bool)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteApplication()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "price": {
          "type": "uint64",
          "key": "price"
        },
        "targetDate": {
          "type": "uint64",
          "key": "targetDate"
        },
        "condition": {
          "type": "bytes",
          "key": "condition"
        },
        "betAmount": {
          "type": "uint64",
          "key": "betAmount"
        },
        "settled": {
          "type": "bytes",
          "key": "settled"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 3
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "BetOnAlgoPrice",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "desc": "Create the application",
        "args": [
          {
            "name": "price",
            "type": "uint64",
            "desc": "The target price of ALGO"
          },
          {
            "name": "date",
            "type": "uint64",
            "desc": "The target date (timestamp)"
          },
          {
            "name": "condition",
            "type": "string",
            "desc": "The condition (Over or Under)"
          },
          {
            "name": "amount",
            "type": "uint64",
            "desc": "The amount to bet (in ALGO)"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIn",
        "desc": "Opt-in to the contract (per user)",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "placeBet",
        "desc": "Place a bet on the contract",
        "args": [
          {
            "name": "amount",
            "type": "uint64",
            "desc": "The amount to wager in ALGO"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "settleBet",
        "desc": "Settle the bet based on whether the user won or lost",
        "args": [
          {
            "name": "isWinner",
            "type": "bool",
            "desc": "Boolean indicating if the sender is the winner"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteApplication",
        "desc": "Method to delete the application\nThis method transfers any remaining funds back to the creator",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}