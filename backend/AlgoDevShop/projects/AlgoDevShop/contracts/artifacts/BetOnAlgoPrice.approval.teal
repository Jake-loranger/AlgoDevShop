#pragma version 10
intcblock 0 1
bytecblock 0x626574416d6f756e74 0x736574746c6564 0x00

// This TEAL was generated by TEALScript v0.106.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *call_DeleteApplication *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(uint64,uint64,string,uint64)void
*abi_route_createApplication:
	// amount: uint64
	txna ApplicationArgs 4
	btoi

	// condition: string
	txna ApplicationArgs 3
	extract 2 0

	// date: uint64
	txna ApplicationArgs 2
	btoi

	// price: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64,uint64,string,uint64)void
	callsub createApplication
	intc 1 // 1
	return

// createApplication(price: uint64, date: uint64, condition: BetCondition, amount: uint64): void
//
// Create the application
//
// @param price The target price of ALGO
// @param date The target date (timestamp)
// @param condition The condition (Over or Under)
// @param amount The amount to bet (in ALGO)
createApplication:
	proto 4 0

	// contracts\BetOnAlgoPrice.algo.ts:27
	// this.price.value = price
	pushbytes 0x7072696365 // "price"
	frame_dig -1 // price: uint64
	app_global_put

	// contracts\BetOnAlgoPrice.algo.ts:28
	// this.targetDate.value = date
	pushbytes 0x74617267657444617465 // "targetDate"
	frame_dig -2 // date: uint64
	app_global_put

	// contracts\BetOnAlgoPrice.algo.ts:29
	// this.condition.value = condition
	pushbytes 0x636f6e646974696f6e // "condition"
	frame_dig -3 // condition: BetCondition
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts\BetOnAlgoPrice.algo.ts:30
	// this.betAmount.value = amount
	bytec 0 //  "betAmount"
	frame_dig -4 // amount: uint64
	app_global_put

	// contracts\BetOnAlgoPrice.algo.ts:31
	// this.settled.value = false
	bytec 1 //  "settled"
	intc 0 // 0
	bytec 2 // 0x00
	intc 0 // 0
	uncover 2
	setbit
	app_global_put
	retsub

// optIn()void
*abi_route_optIn:
	// execute optIn()void
	callsub optIn
	intc 1 // 1
	return

// optIn(): void
//
// Opt-in to the contract (per user)
optIn:
	proto 0 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	pushbytes 0x

	// contracts\BetOnAlgoPrice.algo.ts:38
	// assert(this.txn.sender !== this.app.creator, 'Creator cannot opt-in')
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	!=

	// Creator cannot opt-in
	assert

	// contracts\BetOnAlgoPrice.algo.ts:41
	// minBalance = globals.minBalance + globals.assetOptInMinBalance
	global MinBalance
	global AssetOptInMinBalance
	+
	frame_bury 0 // minBalance: uint64

	// contracts\BetOnAlgoPrice.algo.ts:42
	// assert(this.txn.sender.balance >= minBalance, 'Insufficient balance to opt-in')
	txn Sender
	acct_params_get AcctBalance
	pop
	frame_dig 0 // minBalance: uint64
	>=

	// Insufficient balance to opt-in
	assert
	retsub

// placeBet(uint64)void
*abi_route_placeBet:
	// amount: uint64
	txna ApplicationArgs 1
	btoi

	// execute placeBet(uint64)void
	callsub placeBet
	intc 1 // 1
	return

// placeBet(amount: uint64): void
//
// Place a bet on the contract
//
// @param amount The amount to wager in ALGO
placeBet:
	proto 1 0

	// contracts\BetOnAlgoPrice.algo.ts:57
	// assert(this.txn.sender !== this.app.creator, 'Creator cannot place a bet')
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	!=

	// Creator cannot place a bet
	assert

	// contracts\BetOnAlgoPrice.algo.ts:58
	// assert(this.settled.value === false, 'The bet has already been settled')
	bytec 1 //  "settled"
	app_global_get
	intc 0 // 0
	getbit
	intc 0 // 0
	==

	// The bet has already been settled
	assert

	// contracts\BetOnAlgoPrice.algo.ts:61
	// assert(amount === this.betAmount.value, 'Bet amount must match the expected wager')
	frame_dig -1 // amount: uint64
	bytec 0 //  "betAmount"
	app_global_get
	==

	// Bet amount must match the expected wager
	assert

	// contracts\BetOnAlgoPrice.algo.ts:64
	// assert(this.txn.sender.balance >= amount, 'Insufficient balance to place the bet')
	txn Sender
	acct_params_get AcctBalance
	pop
	frame_dig -1 // amount: uint64
	>=

	// Insufficient balance to place the bet
	assert

	// contracts\BetOnAlgoPrice.algo.ts:67
	// sendPayment({
	//       receiver: this.app.address,
	//       amount: amount
	//     })
	itxn_begin
	intc 1 //  pay
	itxn_field TypeEnum

	// contracts\BetOnAlgoPrice.algo.ts:68
	// receiver: this.app.address
	global CurrentApplicationAddress
	itxn_field Receiver

	// contracts\BetOnAlgoPrice.algo.ts:69
	// amount: amount
	frame_dig -1 // amount: uint64
	itxn_field Amount

	// Fee field not set, defaulting to 0
	intc 0 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// settleBet(bool)void
*abi_route_settleBet:
	// isWinner: bool
	txna ApplicationArgs 1
	dup
	len
	intc 1 // 1
	==

	// argument 0 (isWinner) for settleBet must be a bool
	assert
	intc 0 // 0
	getbit

	// execute settleBet(bool)void
	callsub settleBet
	intc 1 // 1
	return

// settleBet(isWinner: boolean): void
//
// Settle the bet based on whether the user won or lost
//
// @param isWinner Boolean indicating if the sender is the winner
settleBet:
	proto 1 0

	// contracts\BetOnAlgoPrice.algo.ts:82
	// assert(this.settled.value === false, 'The bet has already been settled')
	bytec 1 //  "settled"
	app_global_get
	intc 0 // 0
	getbit
	intc 0 // 0
	==

	// The bet has already been settled
	assert

	// contracts\BetOnAlgoPrice.algo.ts:85
	// this.settled.value = true
	bytec 1 //  "settled"
	intc 1 // 1
	bytec 2 // 0x00
	intc 0 // 0
	uncover 2
	setbit
	app_global_put

	// *if0_condition
	// contracts\BetOnAlgoPrice.algo.ts:88
	// isWinner
	frame_dig -1 // isWinner: boolean
	bz *if0_else

	// *if0_consequent
	// contracts\BetOnAlgoPrice.algo.ts:89
	// sendPayment({
	//         receiver: this.txn.sender, // Sender receives the bet amount back
	//         amount: this.betAmount.value,
	//         closeRemainderTo: this.txn.sender // Optionally close any remaining balance to the sender
	//       })
	itxn_begin
	intc 1 //  pay
	itxn_field TypeEnum

	// contracts\BetOnAlgoPrice.algo.ts:90
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver

	// contracts\BetOnAlgoPrice.algo.ts:91
	// amount: this.betAmount.value
	bytec 0 //  "betAmount"
	app_global_get
	itxn_field Amount

	// contracts\BetOnAlgoPrice.algo.ts:92
	// closeRemainderTo: this.txn.sender
	txn Sender
	itxn_field CloseRemainderTo

	// Fee field not set, defaulting to 0
	intc 0 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	b *if0_end

*if0_else:
	// contracts\BetOnAlgoPrice.algo.ts:96
	// sendPayment({
	//         receiver: this.app.creator, // Or another address if the bet was lost
	//         amount: this.betAmount.value,
	//         closeRemainderTo: this.app.creator // Optionally close any remaining balance to the creator
	//       })
	itxn_begin
	intc 1 //  pay
	itxn_field TypeEnum

	// contracts\BetOnAlgoPrice.algo.ts:97
	// receiver: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field Receiver

	// contracts\BetOnAlgoPrice.algo.ts:98
	// amount: this.betAmount.value
	bytec 0 //  "betAmount"
	app_global_get
	itxn_field Amount

	// contracts\BetOnAlgoPrice.algo.ts:99
	// closeRemainderTo: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field CloseRemainderTo

	// Fee field not set, defaulting to 0
	intc 0 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

*if0_end:
	retsub

// deleteApplication()void
*abi_route_deleteApplication:
	// execute deleteApplication()void
	callsub deleteApplication
	intc 1 // 1
	return

// deleteApplication(): void
//
// Method to delete the application
// This method transfers any remaining funds back to the creator
deleteApplication:
	proto 0 0

	// contracts\BetOnAlgoPrice.algo.ts:109
	// assert(this.txn.sender === this.app.creator, 'Only the creator can delete the application')
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==

	// Only the creator can delete the application
	assert

	// contracts\BetOnAlgoPrice.algo.ts:112
	// sendPayment({
	//       receiver: this.app.creator,
	//       amount: this.app.address.balance,
	//       closeRemainderTo: this.app.creator
	//     })
	itxn_begin
	intc 1 //  pay
	itxn_field TypeEnum

	// contracts\BetOnAlgoPrice.algo.ts:113
	// receiver: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field Receiver

	// contracts\BetOnAlgoPrice.algo.ts:114
	// amount: this.app.address.balance
	global CurrentApplicationAddress
	acct_params_get AcctBalance
	pop
	itxn_field Amount

	// contracts\BetOnAlgoPrice.algo.ts:115
	// closeRemainderTo: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field CloseRemainderTo

	// Fee field not set, defaulting to 0
	intc 0 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*create_NoOp:
	pushbytes 0xd4a8e973 // method "createApplication(uint64,uint64,string,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x29314d95 // method "optIn()void"
	pushbytes 0x42f638ca // method "placeBet(uint64)void"
	pushbytes 0x80c2a399 // method "settleBet(bool)void"
	txna ApplicationArgs 0
	match *abi_route_optIn *abi_route_placeBet *abi_route_settleBet

	// this contract does not implement the given ABI method for call NoOp
	err

*call_DeleteApplication:
	pushbytes 0x2487c32c // method "deleteApplication()void"
	txna ApplicationArgs 0
	match *abi_route_deleteApplication

	// this contract does not implement the given ABI method for call DeleteApplication
	err